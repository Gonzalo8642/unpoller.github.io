"use strict";(self.webpackChunkpollerdox=self.webpackChunkpollerdox||[]).push([[395],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(n),f=a,d=m["".concat(s,".").concat(f)]||m[f]||c[f]||l;return n?r.createElement(d,o(o({ref:t},u),{},{components:n})):r.createElement(d,o({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3655:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var r=n(3117),a=(n(7294),n(3905));const l={id:"macos",title:"MacOS"},o=void 0,i={unversionedId:"install/macos",id:"install/macos",title:"MacOS",description:"This page assumes that you have decided to install UniFi Poller on to an existing macOS operating system.",source:"@site/docs/install/macos.md",sourceDirName:"install",slug:"/install/macos",permalink:"/docs/install/macos",draft:!1,tags:[],version:"current",frontMatter:{id:"macos",title:"MacOS"},sidebar:"someSidebar",previous:{title:"FreeBSD",permalink:"/docs/install/freebsd"},next:{title:"Linux",permalink:"/docs/install/linux"}},s={},p=[{value:"First",id:"first",level:2},{value:"Installation",id:"installation",level:2},{value:"Maintenance",id:"maintenance",level:2},{value:"Next Steps",id:"next-steps",level:2}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This page assumes that you have decided to install UniFi Poller on to an existing macOS operating system."),(0,a.kt)("h2",{id:"first"},"First"),(0,a.kt)("p",null,"Make sure you have set up a user on your controller for UniFi Poller to poll. You must have\na working (and supported) version of ",(0,a.kt)("a",{parentName:"p",href:"../dependencies/grafana"},"Grafana")," and at\nleast one of ",(0,a.kt)("a",{parentName:"p",href:"../dependencies/influxDB"},"InfluxDB")," or ",(0,a.kt)("a",{parentName:"p",href:"../dependencies/prometheus"},"Prometheus"),".\nIf you don't have them, follow these instructions for installing\n",(0,a.kt)("a",{parentName:"p",href:"../dependencies/influxdb"},"InfluxDB")," and ",(0,a.kt)("a",{parentName:"p",href:"../dependencies/grafana"},"Grafana"),"."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Install ",(0,a.kt)("a",{parentName:"li",href:"https://brew.sh/"},"Homebrew"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\n'))),(0,a.kt)("li",{parentName:"ol"},"Install Poller",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"brew install golift/mugs/unpoller\n"))),(0,a.kt)("li",{parentName:"ol"},"Edit the config file after installing the brew.",(0,a.kt)("admonition",{parentName:"li",type:"important"},(0,a.kt)("p",{parentName:"admonition"},"When configuring make sure that you do ",(0,a.kt)("strong",{parentName:"p"},"not")," include ",(0,a.kt)("inlineCode",{parentName:"p"},":8443")," on the url of the controller\nif you are using ",(0,a.kt)("inlineCode",{parentName:"p"},"unifios"),". Those are: UDM Pro, UDM, UXG, or CloudKey with recent firmware.")),"See ",(0,a.kt)("a",{parentName:"li",href:"../install/configuration"},"Application Configuration")," for more information",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"nano /usr/local/etc/unpoller/up.conf\n# or\nvi /usr/local/etc/unpoller/up.conf\n"))),(0,a.kt)("li",{parentName:"ol"},"Start the service:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# do not use sudo\nbrew services start unpoller\n")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The log file should show up at ",(0,a.kt)("inlineCode",{parentName:"li"},"/usr/local/var/log/unpoller.log")),(0,a.kt)("li",{parentName:"ul"},"If it does not show up, make sure your user has permissions to create the file."))),(0,a.kt)("li",{parentName:"ol"},"To restart (",(0,a.kt)("strong",{parentName:"li"}," required after upgrade"),")",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"brew services restart unpoller\n")))),(0,a.kt)("h2",{id:"maintenance"},"Maintenance"),(0,a.kt)("p",null,"All maintenance is done with homebrew. Example commands:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# list all services brew controls.\nbrew services list\n# restart poller.\nbrew services restart unpoller\n# running stop will make it not run on boot.\nbrew services stop unpoller\n# start makes it start now and on boot.\nbrew services start unpoller\n# run starts it but will not re-start on boot.\nbrew services run unpoller\n")),(0,a.kt)("h2",{id:"next-steps"},"Next Steps"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Don't forget the ",(0,a.kt)("a",{parentName:"li",href:"../dependencies/grafana#plugins"},"Grafana Plugins"),"."),(0,a.kt)("li",{parentName:"ol"},"Finish ",(0,a.kt)("a",{parentName:"li",href:"../install/grafana"},"Setting-up Grafana"),".")))}c.isMDXComponent=!0}}]);